{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialodItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialodItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","src","alt","name","Message","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogs","map","el","messageElements","messages","dialogs_items","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dialogsActions","WrappedComponent","restProps"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,oBCAtND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,8HCgBbC,EAXiB,SAACC,GAC7B,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,eAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAMK,IAA/B,UACI,qBAAKC,IAAG,uCAAkCN,EAAMK,IAAME,IAAK,QAC3D,+BAAOP,EAAMQ,WAHUR,EAAMK,K,kBCK9BI,EARe,SAACT,GAC3B,OACI,qBAAKC,UAAWC,IAAEQ,QAAlB,SACKV,EAAMU,SADqBV,EAAMK,K,mCCAxCM,EAAYC,YAAiB,IAmBpBC,cAAkC,CAC7CC,KAAM,wBADKD,EAdoF,SAACb,GAChG,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOT,KAAM,iBAAkBU,UAAWC,IAAUC,SAAU,CAACC,IAAUV,OAE7E,8BACI,yDC6BDW,EA/BsB,SAACtB,GAElC,IAAIuB,EAAQvB,EAAMwB,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAYvB,GAAIuB,EAAGvB,GAAgBG,KAAMoB,EAAGpB,MAAhBoB,EAAGvB,OAC1EwB,EAAkBN,EAAMO,SAASH,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAASvB,GAAIuB,EAAGvB,GAAgBK,QAASkB,EAAGlB,SAAnBkB,EAAGvB,OAM7E,OACI,sBAAKJ,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE6B,cAAlB,SACKN,IAEL,sBAAKxB,UAAWC,IAAE4B,SAAlB,UACI,8BACKD,IAEL,8BACI,8BACI,cAAC,EAAD,CAAgBd,SAfJ,SAACiB,GAC7BhC,EAAMiC,YAAYD,EAASE,8B,iBCnB7BC,EAA6B,SAACZ,GAChC,MAAO,CACHa,OAAQb,EAAMc,KAAKD,S,YCWZE,sBACXC,aAVkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBY,OAAQb,EAAMc,KAAKD,UAOhB,eAAsBI,ODJ1B,SAA+BC,GAMlC,OAAOF,YAA6CJ,EAA7CI,EAL0C,SAACvC,GACfA,EAAxBoC,OADkD,IACvCM,EADsC,YACzB1C,EADyB,YAExD,OAAKA,EAAMoC,OACJ,cAACK,EAAD,eAAsBC,IADH,cAAC,IAAD,CAAUtC,GAAI,gBCAjCkC,CAGbhB","file":"static/js/4.ae2cc2f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2hqMv\",\"active\":\"DialogItem_active__1-ZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React, {FC} from 'react';\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsT} from \"../../../Types/types\";\n\n\nconst DialogItem:FC<DialogsT> = (props) => {\n    return (\n        <div className={s.dialog} key={props.id}>\n            <NavLink to={`/dialogs/${props.id}`} >\n                <img src={`https://i.pravatar.cc/80?img=${props.id}`} alt={'ava'}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;\n\n","import React, {FC} from 'react';\nimport s from './Message.module.css'\nimport {MessagesT} from \"../../../Types/types\";\n\n\nconst Message:FC<MessagesT> = (props) => {\n    return (\n        <div className={s.message} key={props.id}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message;\n\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field, InjectedFormProps} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\nimport {reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {NewMessageFormType} from \"../Dialogs\";\n\nconst maxLength = maxLengthCreator(50)\n\ntype NewMessageFormKeysType = Extract<keyof NewMessageFormType, string>\ntype PropsType = {}\n\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormKeysType, PropsType> & PropsType> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'newMessageBody'} component={Textarea} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm<NewMessageFormKeysType>({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)\n","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialodItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\nimport {InitialStateT} from \"../../redux/dialogs-reducer\";\n\ntype PropsType = {\n    dialogsPage: InitialStateT\n    sendMessage: (messageText: string) => void\n}\n\nexport type NewMessageFormType = {\n    newMessageBody: string\n}\n\n\nconst Dialogs: React.FC<PropsType> = (props) => {\n\n    let state = props.dialogsPage\n    let dialogElements = state.dialogs.map((el) => <DialogItem id={el.id} key={el.id} name={el.name}/>)\n    let messageElements = state.messages.map((el) => <Message id={el.id} key={el.id} message={el.message}/>)\n\n    const onSendMessageClick: any = (formData: NewMessageFormType) => {\n        props.sendMessage(formData.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    {messageElements}\n                </div>\n                <div>\n                    <div>\n                        <AddMessageForm onSubmit={onSendMessageClick}/>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\n\nexport default Dialogs;\n\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\ntype MapPropsType = {\n    isAuth: boolean\n}\n\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\n    const RedirectComponent:React.FC<MapPropsType> = (props) => {\n        const {isAuth, ...restProps} = props\n        if (!props.isAuth) return <Redirect to={'/login'}/>\n        return <WrappedComponent {...restProps as WCP}/>\n    }\n    return connect<MapPropsType, {}, WCP, AppStateType>(mapStateToPropsForRedirect)(RedirectComponent)\n\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {dialogsActions} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n    \n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {...dialogsActions}),\n    withAuthRedirect,\n)(Dialogs);\n\n"],"sourceRoot":""}