{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Dialogs/DialodItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/Profile.module.css","reportWebVitals.js","redux/state.js","components/Header/Header.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Dialogs/DialodItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","like_count","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","push","newText","body","window","state","Header","className","s","header","alt","src","Friends","friends","images","Math","floor","random","Navbar","nav","item","to","activeClassName","active_link","DialogItem","props","dialog","Message","Dialogs","dialogElements","map","el","messageElements","dialogs_items","value","onChange","e","target","updateNewMessageBodyCreator","placeholder","onClick","Post","text","MyPosts","newPostElement","React","createRef","posts_block","ref","current","ProfileInfo","image_header","description_block","Profile","content","App","path","render","pr","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.cee53473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active_link\":\"Navbar_active_link__2vAVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1-Zf7\",\"images\":\"Friends_images__2QqNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2sqK_\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"posts\":\"Post_posts__144VX\",\"text\":\"Post_text__3_Vii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_header\":\"ProfileInfo_image_header__28rWN\",\"description_block\":\"ProfileInfo_description_block__187mR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2hqMv\",\"active\":\"DialogItem_active__1-ZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"image_header\":\"Profile_image_header__2kIvZ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_POST = 'ADD-POST'\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW_POST_TEXT'\nexport const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW_MESSAGE_BODY'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: \"1\", message: 'Привет, ты как?', like_count: 12},\n                {id: \"2\", message: 'Мой первый пост', like_count: 20},\n            ],\n            newPostText: 'Win!',\n        },\n        dialogsPage: {\n            messages: [\n                {id: 1, message: 'нОрм?'},\n                {id: 2, message: 'нОрм.'},\n                {id: 3, message: 'нОрм!'},\n            ],\n            dialogs: [\n                {id: '1', name: 'Alexandr'},\n                {id: '2', name: 'Viktor'},\n                {id: '3', name: 'Yuri'},\n                {id: '4', name: 'Vladimir'},\n            ],\n            newMessageBody: '',\n        }\n\n\n    },\n    _callSubscriber() {\n        console.log('rerenderEntireTree')\n    },\n    getState() {\n        return this._state\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                like_count: 0\n            }\n            this._state.profilePage.posts.push(newPost)\n            this.dispatch({type: UPDATE_NEW_POST_TEXT, newText: ''})\n            this._callSubscriber(this._state)\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText\n            this._callSubscriber(this._state)\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n            this._state.dialogsPage.newMessageBody = action.body\n            this._callSubscriber(this._state)\n        } else if (action.type === SEND_MESSAGE) {\n            let body = this._state.dialogsPage.newMessageBody\n            this._state.dialogsPage.messages.push({id: 6, message:body})\n            this._state.dialogsPage.newMessageBody = ''\n            this._callSubscriber(this._state)\n        }\n    },\n}\n\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body:body})\n\nwindow.state = store\n\nexport default store;\n","import React from 'react';\nimport s from './Header.module.css';\n\nconst Header = () => {\n    return (\n        <header className={s.header}>\n            <img alt='logo' src={'https://svgx.ru/svg/1775543.svg'}/>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport s from './Friends.module.css'\n\nconst Friends = () => {\n    return (\n        <div className={s.friends}>\n            <div>Friends:</div>\n            <div className={s.images}>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Friends;\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to={'/profile'} activeClassName={s.active_link}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/dialogs'} activeClassName={s.active_link}>Dialogs</NavLink>\n            </div>\n            <div className={`${s.item}`}>\n                <NavLink to={'/news'} activeClassName={s.active_link}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/music'} activeClassName={s.active_link}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/settings'} activeClassName={s.active_link}>Settings</NavLink>\n            </div>\n            <Friends/>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={`/dialogs/${props.id}`}>\n                <img src={`https://i.pravatar.cc/80?img=${props.id}`} alt={'ava'}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;\n\n","import React from 'react';\nimport s from './Message.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message;\n\n","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialodItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/state\";\n\n\nconst Dialogs = (props) => {\n    let state = props.store.getState().dialogsPage\n\n    let dialogElements = state.dialogs.map((el) => <DialogItem id={el.id} name={el.name}/>)\n    let messageElements = state.messages.map((el) => <Message id={el.id} message={el.message}/>)\n\n    const onSendMessageClick = () => {\n        props.store.dispatch(sendMessageCreator())\n    }\n    const onNewMessageChange = (e) => {\n        let body = e.target.value\n        props.store.dispatch(updateNewMessageBodyCreator(body))\n    }\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    {messageElements}\n                </div>\n                <div>\n                    <div>\n                        <textarea\n                            value={state.newMessageBody}\n                            onChange={onNewMessageChange}\n                            placeholder={'Напиши сообщение'}/>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessageClick}>Send</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n\n        <div className={s.item}>\n            <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n            <span className={s.text}>{props.message}</span>\n            <div>\n                <span>{props.like_count} ❤</span>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Post;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\n\n\n\nconst MyPosts = (props) => {\n\n    let newPostElement = React.createRef()\n\n    let addPost = () => {\n        props.dispatch({type:'ADD-POST'})\n    }\n    let onPostChange = () => {\n        let text = newPostElement.current.value\n        let action = {type:'UPDATE-NEW_POST_TEXT', newText:text};\n        props.dispatch(action)\n    }\n\n    return (\n        <div className={s.posts_block}>\n            <h2>My posts</h2>\n            <div>\n                <div>\n                    <textarea ref={newPostElement}\n                              value={props.newPostText}\n                              onChange={onPostChange}\n                    />\n                </div>\n                <div>\n                    <button onClick={addPost}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {props.posts.map((el) => <Post id={el.id} key={el.id} message={el.message}\n                                               like_count={el.like_count}/>)}\n            </div>\n        </div>\n    );\n};\n\nexport default MyPosts;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileInfo = (props) => {\n    return (\n        <div>\n            <div>\n                <img className={s.image_header} src={'https://coverfiles.alphacoders.com/360/36044.jpg'}\n                     alt={'header'}/>\n            </div>\n            <div className={s.description_block}>\n                ava + description\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Profile.module.css';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n\n    console.log('Profile PROPS', props)\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPosts\n                posts={props.posts}\n                dispatch={props.dispatch}\n                newPostText={props.newPostText}\n            />\n        </div>\n    );\n};\n\nexport default Profile;\n","import './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Profile from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\nconst App = (props) => {\n    return (\n        <BrowserRouter>\n            <div className={'app-wrapper'}>\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path={'/dialogs'} render={(pr)=><Dialogs\n                        {...pr}\n                        dispatch={props.dispatch}\n                        store={props.store}\n                    />}/>\n                    <Route path={'/profile'} render={(pr)=><Profile\n                        {...pr}\n                        {...props.state.profilePage}\n                        dispatch={props.dispatch}\n                    />}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/state\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                state={state}\n                store={store}\n                dispatch={store.dispatch.bind(store)}\n            />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n}\n\n\nrerenderEntireTree(store.getState())\nstore.subscribe(rerenderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}