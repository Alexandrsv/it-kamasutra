{"version":3,"sources":["assets/images/avatar-placeholder.png","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","../node_modules/reselect/es/index.js","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","currentPage","onPageChanged","totalItemsCount","pageSize","pagesCount","Math","ceil","pages","Array","fill","map","e","index","halfRange","sliceRange","sliceStart","slice","nextChunk","step","className","s","paginator","onClick","p","selectedPage","User","user","follow","unfollow","followingProgress","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","Users","props","pNum","totalUsersCount","users","u","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","isArray","every","dep","dependencyTypes","join","Error","memoize","_len","arguments","memoizeOptions","_key","createSelectorCreator","func","undefined","lastArgs","lastResult","apply","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getIsFollowingInProgress","followingInProgress","UserContainer","pageNumber","getUsersTh","this","Preloader","toggleFollowing","toggleFollowingProgress","isFollowingInProgress","React","Component","compose","connect","setUsers","setCurrentPage","requestUsers"],"mappings":"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","file":"static/js/5.5f535928.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-placeholder.05262aba.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\",\"pNum\":\"Users_pNum__OJC9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"paginator\":\"Paginator_paginator__18P4_\"};","import React from 'react'\nimport s from './Paginator.module.css'\n\n\nlet Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n    let pages = Array(pagesCount).fill(1).map((e, index) => index + 1)\n    const sliceRange = 5\n    const halfRange = Math.ceil(sliceRange / 2)\n    let sliceStart = currentPage <= halfRange ? 0 : currentPage - halfRange\n    pages = pages.slice(sliceStart, currentPage + halfRange)\n\n    const nextChunk = (step) => {\n        if ((currentPage + step) > pagesCount) {\n            onPageChanged(pagesCount - halfRange)\n        } else if ((currentPage + step) < 0) {\n            onPageChanged(halfRange)\n        } else {\n            onPageChanged(currentPage + step)\n        }\n\n    }\n\n    return <div className={s.paginator}>\n        {currentPage > 100 && <span onClick={() => nextChunk(-100)}>{'<100'}&nbsp;</span>}\n        {currentPage > 10 && <span onClick={() => nextChunk(-10)}>{'<10'}&nbsp;&nbsp;&nbsp;</span>}\n        {pages.map((p) => {\n            return <span\n                onClick={() => onPageChanged(p)}\n                className={currentPage === p ? s.selectedPage : ''}\n                key={p}\n            > {p} </span>\n\n        })}\n        {currentPage + 10 < pagesCount && <span onClick={() => nextChunk(10)}>&nbsp;&nbsp;&nbsp;{'10>'}&nbsp;</span>}\n        {currentPage + 100 < pagesCount && <span onClick={() => nextChunk(100)}>{'100>'}</span>}\n    </div>\n\n}\n\nexport default Paginator\n","import React from 'react'\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/images/avatar-placeholder.png'\nimport {NavLink} from 'react-router-dom'\n\n\nlet User = ({user, follow, unfollow, followingProgress}) => {\n\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"avatar\"\n                             className={s.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed\n                        ? <button\n                            disabled={followingProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                unfollow(user.id)\n                            }}>\n                            Unfollow\n                        </button>\n                        : <button\n                            disabled={followingProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                follow(user.id)\n                            }}>\n                            Follow\n                        </button>}\n\n                </div>\n            </span>\n            <span>\n                <div>{user.name}</div>\n                <div>{user.status}</div>\n            </span>\n            <span>\n                <div>{'user.location.city'}</div>\n                <div>{'user.location.country'}</div>\n            </span>\n        </div>\n    )\n}\n\n\nexport default User\n","import React from 'react'\nimport s from './Users.module.css'\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = (props) => {\n\n    return (\n        <div>\n            <div className={s.pNum}>\n                <Paginator totalItemsCount={props.totalUsersCount}{...props}/>\n            </div>\n            <div>\n                {props.users.map(u => <User key={u.id} user={u} follow={props.follow} unfollow={props.unfollow}\n                                            followingProgress={props.followingProgress}/>)}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Users\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {createSelector} from \"reselect\";\n\nexport const getUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getIsFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {\n    follow,\n    requestUsers,\n    setCurrentPage,\n    setUsers,\n    toggleFollowingProgress,\n    unfollow\n} from '../../redux/users-reducer'\nimport Users from './Users'\nimport Preloader from '../common/Preloader/Preloader'\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getIsFetching,\n    getIsFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n} from \"../../redux/users-selectors\";\n\nclass UserContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.getUsersTh(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props\n        this.props.getUsersTh(pageNumber, pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching\n                ? <Preloader/>\n                : <Users\n                    totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    users={this.props.users}\n                    unfollow={this.props.unfollow}\n                    follow={this.props.follow}\n                    onPageChanged={this.onPageChanged}\n                    toggleFollowing={this.props.toggleFollowingProgress}\n                    followingProgress={this.props.isFollowingInProgress}\n                />}\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        isFollowingInProgress: getIsFollowingInProgress(state),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsersTh: requestUsers,\n    }),\n    // withAuthRedirect\n)(UserContainer)\n"],"sourceRoot":""}