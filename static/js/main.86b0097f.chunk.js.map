{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Dialogs/DialodItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Navbar/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Dialogs/DialodItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","assets/images/avatar-placeholder.png","components/Users/Users.jsx","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","like_count","newPostText","profile","profileReducer","state","action","type","newPost","Math","floor","random","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","messages","dialogs","name","newMessageBody","dialogsReducer","body","qwe","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","u","userid","followed","totalCount","SET_USER_DATA","userId","email","login","isAuth","authReducer","data","redusers","combineReducers","profilePage","dialogsPage","usersPage","sidebar","auth","store","createStore","window","Friends","className","s","friends","images","src","alt","Navbar","nav","item","to","activeClassName","active_link","DialogItem","props","dialog","Message","Dialogs","dialogElements","el","messageElements","dialogs_items","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","DialogsContainer","connect","dispatch","updateNewMessageBodyCreator","Users","ceil","pages","Array","fill","index","pNum","p","onPageChanged","selectedPage","photos","small","userPhoto","unfollow","follow","status","Preloader","preloaderImg","UserContainer","pageNumber","toggleIsFetching","setCurrentPage","axios","get","response","setUsers","items","this","setTotalUsersCount","React","Component","ProfileInfo","image_header","description_block","fullName","large","aboutMe","lookingForAJobDescription","Object","entries","contacts","i","url","test","href","rel","Post","text","MyPosts","posts_block","updateNewPostText","addPost","MyPostsContainer","updateNewPostTextCreator","Profile","content","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","HeaderContainer","withCredentials","resultCode","setAuthUserData","App","path","render","UsersContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.86b0097f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"pNum\":\"Users_pNum__OJC9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1-Zf7\",\"images\":\"Friends_images__2QqNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_header\":\"ProfileInfo_image_header__28rWN\",\"description_block\":\"ProfileInfo_description_block__187mR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2sqK_\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"posts\":\"Post_posts__144VX\",\"text\":\"Post_text__3_Vii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2hqMv\",\"active\":\"DialogItem_active__1-ZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"image_header\":\"Profile_image_header__2kIvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active_link\":\"Navbar_active_link__2vAVe\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\n\nlet initialState = {\n    posts: [\n        { id: \"1\", message: 'Привет, ты как?', like_count: 12 },\n        { id: \"2\", message: 'Мой первый пост', like_count: 20 },\n    ],\n    newPostText: 'Win!',\n    profile: null,\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: Math.floor(Math.random() * 500),\n                message: state.newPostText,\n                like_count: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        case UPDATE_NEW_POST_TEXT:\n            return { ...state, newPostText: action.newText }\n        case SET_USER_PROFILE:\n            return { ...state, profile: action.profile }\n        default:\n            return state\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST })\nexport const updateNewPostTextCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\n\nexport default profileReducer\n","export const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW_MESSAGE_BODY'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\nlet initialState = {\n    messages: [\n        {id: 1, message: 'нОрм?'},\n        {id: 2, message: 'нОрм.'},\n        {id: 3, message: 'нОрм!'},\n    ],\n    dialogs: [\n        {id: '1', name: 'Alexandr'},\n        {id: '2', name: 'Viktor'},\n        {id: '3', name: 'Yuri'},\n        {id: '4', name: 'Vladimir'},\n    ],\n    newMessageBody: '',\n}\nexport const dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return {...state, newMessageBody: action.body}\n        case SEND_MESSAGE:\n            let body = state.newMessageBody\n            return {\n                ...state, \n                messages: [...state.messages, \n                            {id: Math.floor(Math.random() * 500), message: body}],\n                newMessageBody: ''\n            }\n        default:\n            return state\n    }\n}\n\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\n\nexport default dialogsReducer\n","let initialState = {\n    qwe: 123\n}\nconst sidebarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case '123':\n            return state\n        default:\n            return state\n    }\n}\n\nexport default sidebarReducer\n","const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nlet initialState = {\n    users: [],\n    pageSize: 7,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userid) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userid) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return { ...state, users: action.users }\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.totalCount }\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching }\n        default:\n            return state\n    }\n}\n\nexport const follow = (userid) => ({ type: FOLLOW, userid })\nexport const unfollow = (userid) => ({ type: UNFOLLOW, userid })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\n\nexport default usersReducer\n","const SET_USER_DATA = 'SET_USER_DATA'\nconst UNFOLLOW = 'UNFOLLOW'\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n\n            }\n        default:\n            return state\n    }\n}\n\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, data: { userId, email, login } })\n\nexport default authReducer\n","import { combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\n\nlet redusers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    sidebar: sidebarReducer,\n    auth: authReducer,\n})\n\nlet store = createStore(redusers)\n\nwindow.store=store\n\nexport default store\n","import React from 'react';\nimport s from './Friends.module.css'\n\nconst Friends = () => {\n    return (\n        <div className={s.friends}>\n            <div>Friends:</div>\n            <div className={s.images}>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n                <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Friends;\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./Friends/Friends\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to={'/profile'} activeClassName={s.active_link}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/dialogs'} activeClassName={s.active_link}>Dialogs</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/users'} activeClassName={s.active_link}>Users</NavLink>\n            </div>\n            <div className={`${s.item}`}>\n                <NavLink to={'/news'} activeClassName={s.active_link}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/music'} activeClassName={s.active_link}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={'/settings'} activeClassName={s.active_link}>Settings</NavLink>\n            </div>\n            <Friends/>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={`/dialogs/${props.id}`}>\n                <img src={`https://i.pravatar.cc/80?img=${props.id}`} alt={'ava'}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;\n\n","import React from 'react';\nimport s from './Message.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message;\n\n","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialodItem/DialogItem\";\nimport Message from \"./Message/Message\";\n\n\nconst Dialogs = (props) => {\n    \n    let state = props.dialogsPage\n    let dialogElements = state.dialogs.map((el) => <DialogItem id={el.id} name={el.name}/>)\n    let messageElements = state.messages.map((el) => <Message id={el.id} message={el.message}/>)\n\n    const onSendMessageClick = () => {\n        props.sendMessage()\n    }\n    const onNewMessageChange = (e) => {\n        let body = e.target.value\n        props.updateNewMessageBody(body)\n    }\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    {messageElements}\n                </div>\n                <div>\n                    <div>\n                        <textarea\n                            value={state.newMessageBody}\n                            onChange={onNewMessageChange}\n                            placeholder={'Напиши сообщение'}/>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessageClick}>Send</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\n\n\nlet mapStateToProps= (state) =>{\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps= (dispatch) =>{\n    return {\n        updateNewMessageBody:(body)=>{\n            dispatch(updateNewMessageBodyCreator(body))\n        },\n        sendMessage:()=>{\n            dispatch(sendMessageCreator())\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default DialogsContainer;\n\n","export default __webpack_public_path__ + \"static/media/avatar-placeholder.05262aba.png\";","import React from 'react'\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/images/avatar-placeholder.png'\nimport { NavLink } from 'react-router-dom'\n\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    // let pages = Array(pagesCount).fill(1).map((e, index) => index + 1) //Слишком много страниц, позже норм сделаю\n    let pages = Array(20).fill(1).map((e, index) => index + 1)\n\n    return (\n        <div>\n            <div className={s.pNum}>\n                {pages.map((p) => {\n                    return <span\n                        onClick={() => props.onPageChanged(p)}\n                        className={props.currentPage === p && s.selectedPage}\n                        key={p}\n                    > {p} </span>\n                })}\n            </div>\n            {props.users.map(u => <div key={u.id}>\n                <span>\n                    <div>\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\" className={s.userPhoto} />\n                        </NavLink>\n                    </div>\n                    <div>\n                        {u.followed ? <button onClick={() => { props.unfollow(u.id) }}>\n                            Follow\n                                     </button>\n                            : <button onClick={() => { props.follow(u.id) }}>\n                                Unollow\n                                     </button>}\n\n                    </div>\n                </span>\n                <span>\n                    <div>{u.name}</div>\n                    <div>{u.status}</div>\n                </span>\n                <span>\n                    <div>{'u.location.city'}</div>\n                    <div>{'u.location.country'}</div>\n                </span>\n            </div>)}\n        </div>\n    )\n}\n\n\n\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.0b5d9161.gif\";","import React from 'react'\nimport preloaderImg from '../../../assets/images/preloader.gif'\n\n\nlet Preloader = (props) => {\n    return <img src={preloaderImg} alt='loading' />\n}\n\nexport default Preloader","import React from 'react'\nimport { connect } from 'react-redux'\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer'\nimport axios from 'axios'\nimport Users from './Users'\nimport Preloader from '../common/Preloader/Preloader'\n\nclass UserContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n                this.props.setTotalUsersCount(response.data.totalCount)\n            })\n\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.toggleIsFetching(true)\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching\n                ? <Preloader />\n                : <Users\n                    totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    users={this.props.users}\n                    unfollow={this.props.unfollow}\n                    follow={this.props.follow}\n                    onPageChanged={this.onPageChanged}\n                />}\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleIsFetching,\n})(UserContainer)","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <>\n            <div>\n                <img className={s.image_header} src={'https://coverfiles.alphacoders.com/360/36044.jpg'}\n                    alt={'header'} />\n            </div>\n            <div className={s.description_block}>\n                <h2>{props.profile.fullName}</h2>\n                <img src={props.profile.photos.large} alt=\"\" />\n                <div>aboutMe - {props.profile.aboutMe}</div>\n                <div>lookingForAJobDescription - {props.profile.lookingForAJobDescription}</div>\n                <br />\n                <div>{Object.entries(props.profile.contacts).map((i, index) => {\n                    let url\n                    if (!/^https?:\\/\\//.test(i[1]) && i[1]) {\n                        url = 'https://' + i[1]\n                    } else {\n                        url = i[1]\n                    }\n                    return <div key={index}>{i[0]} - <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></div>\n                })}</div>\n\n            </div>\n        </>\n    );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n\n        <div className={s.item}>\n            <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n            <span className={s.text}>{props.message}</span>\n            <div>\n                <span>{props.like_count} ❤</span>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Post;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\n\n\nconst MyPosts = (props) => {\n    let onAddPost = () => {\n        props.addPost()\n    }\n    let onPostChange = (e) => {\n        let text = e.target.value\n        props.updateNewPostText(text)\n    }\n    return (\n        <div className={s.posts_block}>\n            <h2>My posts</h2>\n            <div>\n                <div>\n                    <textarea\n                        value={props.newPostText}\n                        onChange={onPostChange}\n                    />\n                </div>\n                <div>\n                    <button onClick={onAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {props.posts.map((el) => <Post id={el.id} key={el.id} message={el.message}\n                                               like_count={el.like_count}/>)}\n            </div>\n        </div>\n    );\n};\n\nexport default MyPosts;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPostActionCreator, updateNewPostTextCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: () => { dispatch(addPostActionCreator()) },\n        updateNewPostText: (text) => {\n            let action = updateNewPostTextCreator(text);\n            dispatch(action)\n        },\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    \n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} />\n            <MyPostsContainer />\n        </div>\n    );\n};\n\nexport default Profile;\n","import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { setUserProfile } from '../../redux/profile-reducer'\nimport { withRouter } from 'react-router';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId || 2\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n            .then(response => {\n                this.props.setUserProfile(response.data)\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile} />\n            </div>\n        )\n    }\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile\n\n    }\n}\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\n\nexport default connect(mapStateToProps, { setUserProfile })(WithUrlDataContainerComponent);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Header.module.css';\n\nconst Header = (props) => {\n    \n    return (\n        <header className={s.header}>\n            <img alt='logo' src={'https://svgx.ru/svg/1775543.svg'} />\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <NavLink to={'/profile/'+props.userId}>{props.login}</NavLink>\n                    : <NavLink to={'/login'}>Login</NavLink>\n                }\n            </div>\n        </header>\n\n    );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { setAuthUserData } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n    componentDidMount() {\n        // this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n            withCredentials: true,\n        })\n            .then(response => {\n                // this.props.toggleIsFetching(false)\n                if (response.data.resultCode === 0) {\n                    let { id, login, email } = response.data.data\n                    this.props.setAuthUserData(id, email, login)\n                }\n            })\n\n\n    }\n    render() {\n        return (\n            <Header {...this.props} />\n\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n    userId: state.auth.userId,\n})\n\nexport default connect(mapStateToProps, { setAuthUserData })(HeaderContainer);\n","import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route } from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\n\n\nconst App = (props) => {\n    return (\n        <div className={'app-wrapper'}>\n            <HeaderContainer />\n            <Navbar />\n            <div className={'app-wrapper-content'}>\n                <Route path={'/dialogs'} render={() => <DialogsContainer />} />\n                <Route path={'/profile/:userId?'} render={() => <ProfileContainer />} />\n                <Route path={'/users'} render={() => <UsersContainer />} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            {/* <React.StrictMode> */}\n                <App/>\n            {/* </React.StrictMode> */}\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}