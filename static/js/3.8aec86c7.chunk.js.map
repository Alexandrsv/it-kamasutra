{"version":3,"sources":["assets/images/avatar-placeholder.png","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","state","editMode","status","props","activateEditMode","isOwner","setState","console","log","onStatusChange","e","currentTarget","this","updateStatus","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","deactivateEditMode","bind","React","Component","reduxForm","form","profile","handleSubmit","error","onSubmit","style","padding","className","s","formSummaryError","Field","placeholder","name","validate","component","InputComponent","type","Textarea","entries","contacts","map","ProfileData","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","index","contactTitle","contactValue","Contacts","url","test","contact","href","target","rel","ProfileInfo","saveAvatarPhoto","saveProfile","useState","setEditMode","Preloader","description_block","fullName","avatarImg","src","photos","large","avaPlaceholder","alt","files","accept","initialValues","formData","then","Post","item","Math","floor","random","text","message","like_count","MyPosts","memo","posts_block","AddNewPostReduxForm","addPost","newPostBody","posts","el","id","maxLength","maxLengthCreator","required","MyPostsContainer","connect","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfileData","getStatus","refreshProfile","String","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8aec86c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-placeholder.05262aba.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"image_header\":\"Profile_image_header__2kIvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_header\":\"ProfileInfo_image_header__28rWN\",\"description_block\":\"ProfileInfo_description_block__187mR\",\"avatarImg\":\"ProfileInfo_avatarImg__2izmI\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2sqK_\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"posts\":\"Post_posts__144VX\",\"text\":\"Post_text__3_Vii\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        if (this.props.isOwner) {\n            this.setState({\n                editMode: true\n            })\n        } else {\n            console.log('Стутус менять не дозволено!')\n        }\n    }\n\n    deactivateEditMode() {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true}\n                           onBlur={this.deactivateEditMode.bind(this)}\n                           value={this.state.status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {InputComponent, Textarea} from \"../../common/FormsControl/FormsControl\";\nimport s from \"../../common/FormsControl/FormsControl.module.css\";\n\nconst ProfileDataForm = ({profile, isOwner, handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {isOwner && <div>\n                <button>💾save</button>\n            </div>}\n            {error && <div style={{padding: '19px 0'}}>\n                <span className={s.formSummaryError}>{error}</span>\n            </div>}\n            <br/>\n            <b>Full name:</b>\n            <Field placeholder={'Full name'} name={'fullName'} validate={[]} component={InputComponent}/>\n            <b>Looking for a job:</b>\n            <Field name={'lookingForAJob'} type={'checkbox'} component={InputComponent}/>\n            <b>My professional skills:</b>\n            <Field placeholder={'My professional skills'} name={'lookingForAJobDescription'} validate={[]}\n                   component={Textarea}/>\n            <b>About me:</b>\n            <Field placeholder={''} name={'aboutMe'} validate={[]} component={Textarea}/>\n\n\n            <b>Contacts:</b>\n            <div>{Object.entries(profile.contacts).map((i) => {\n                return <div key={i[0]}>{i[0]}<Field name={'contacts.' + i[0]} component={InputComponent}/></div>\n            })}</div>\n        </form>\n    );\n};\n\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);\n","import React, {useState} from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatus from \"./ProfileStatus\";\nimport avaPlaceholder from '../../../assets/images/avatar-placeholder.png'\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, saveAvatarPhoto, saveProfile}) => {\n\n        let [editMode, setEditMode] = useState(false)\n\n        if (!profile) {\n            return <Preloader/>\n        }\n\n        const mainPhotoSelected = (e) => {\n            if (e.target.files.length) {\n                saveAvatarPhoto(e.target.files[0])\n            }\n        }\n\n        const onSubmit = (formData) => {\n            console.log(formData)\n            saveProfile(formData) //решение не канон\n                .then(()=> {\n                    setEditMode(false)\n                })\n        }\n\n        return (\n            <>\n                <div className={s.description_block}>\n                    <h2>{profile.fullName}</h2>\n                    <img className={s.avatarImg} src={profile.photos.large || avaPlaceholder} alt=\"\"/>\n                    {isOwner && <input\n                        onChange={mainPhotoSelected}\n                        type=\"file\"\n                        name=\"avatar_upload\"\n                        accept=\".jpg, .jpeg, .png, .svg\"\n                    />}\n                    <hr/>\n                    <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/>\n                    <hr/>\n                    {editMode ?\n                        <ProfileDataForm profile={profile}\n                                         isOwner={isOwner}\n                                         initialValues={profile}\n                                         onSubmit={onSubmit}/> :\n                        <ProfileData profile={profile}\n                                     isOwner={isOwner}\n                                     goToEditMode={() => {\n                                         setEditMode(true)\n                                     }}/>}\n\n                </div>\n            </>\n        );\n    }\n;\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            {isOwner && <div>\n                <button onClick={goToEditMode}>📝edit</button>\n            </div>}\n            <div><b>Looking for a job</b> - {profile.lookingForAJob ? 'yes' : 'no'}</div>\n            {profile.lookingForAJob &&\n            <div><b>My skills</b> - {profile.lookingForAJobDescription}</div>\n            }\n\n            <div><b>About me</b> - {profile.aboutMe}</div>\n            <br/>\n            <b>Contacts:</b>\n            <div>{Object.entries(profile.contacts).map((i, index) => {\n                return <Contacts key={index} contactTitle={i[0]} contactValue={i[1]}/>\n            })}</div>\n        </div>\n    )\n}\n\n\nexport const Contacts = ({contactTitle, contactValue}) => {\n    let url\n    if (!/^https?:\\/\\//.test(contactValue) && contactValue) {\n        url = 'https://' + contactValue\n    } else {\n        url = contactValue\n    }\n    return <div className={s.contact}>{contactTitle} - <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\n    </div>\n\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n\n        <div className={s.item}>\n            <img src={`https://i.pravatar.cc/80?img=${Math.floor(Math.random() * 50)}`} alt={'ava'}/>\n            <span className={s.text}>{props.message}</span>\n            <div>\n                <span>{props.like_count} ❤</span>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Post;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\n\n\nconst MyPosts = React.memo((props) => {\n\n    let onAddPost = (formData) => {\n        props.addPost(formData.newPostBody)\n    }\n    console.log('RENDER')\n    return (\n\n        <div className={s.posts_block}>\n            <h2>My posts</h2>\n            <div>\n                <div>\n                    <AddNewPostReduxForm onSubmit={onAddPost}/>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {props.posts.map((el) => <Post id={el.id} key={el.id} message={el.message}\n                                               like_count={el.like_count}/>)}\n            </div>\n        </div>\n    );\n})\n\nconst maxLength = maxLengthCreator(10)\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    placeholder={'New post text'}\n                    type=\"text\" name={'newPostBody'}\n                    component={Textarea}\n                    validate={[required, maxLength]}\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    );\n};\n\nconst AddNewPostReduxForm = reduxForm({\n    form: 'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\n\nexport default MyPosts;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPostActionCreator, } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) },\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         isOwner={props.isOwner}\n                         saveAvatarPhoto={props.saveAvatarPhoto}\n                         saveProfile={props.saveProfile}\n            />\n            <MyPostsContainer />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Profile from './Profile';\nimport {getStatus, getUserProfileData, saveAvatarPhoto, updateStatus, saveProfile} from '../../redux/profile-reducer'\nimport {withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId || this.props.authorizedUserId\n        if (!userId) {\n            this.props.history.push('login')\n        }\n        this.props.getUserProfileData(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         isOwner={!this.props.match.params.userId || (String(this.props.authorizedUserId) === this.props.match.params.userId)}\n                         saveAvatarPhoto={this.props.saveAvatarPhoto}\n                />\n            </div>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfileData, getStatus, updateStatus, saveAvatarPhoto, saveProfile}),\n    // withAuthRedirect,\n    withRouter,\n)(ProfileContainer)\n"],"sourceRoot":""}