{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialodItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialodItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","src","alt","name","Message","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogs","map","el","messageElements","messages","isAuth","dialogs_items","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,oBCAtND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,qHCebC,EAXI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,eAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAMK,IAA/B,UACI,qBAAKC,IAAG,uCAAkCN,EAAMK,IAAME,IAAK,QAC3D,+BAAOP,EAAMQ,WAHUR,EAAMK,K,kBCK9BI,EARC,SAACT,GACb,OACI,qBAAKC,UAAWC,IAAEQ,QAAlB,SACKV,EAAMU,SADqBV,EAAMK,K,0CCAxCM,EAAYC,YAAiB,IAgBpBC,cAAU,CACrBC,KAAM,wBADKD,EAdQ,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOT,KAAM,iBAAkBU,UAAWC,IAAUC,SAAU,CAACC,IAAUV,OAE7E,8BACI,yDC8BDW,EArCC,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAYvB,GAAIuB,EAAGvB,GAAIG,KAAMoB,EAAGpB,UAC3EqB,EAAkBN,EAAMO,SAASH,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAASvB,GAAIuB,EAAGvB,GAAIK,QAASkB,EAAGlB,aAMjF,OAAKV,EAAM+B,OAKP,sBAAK9B,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,cAAlB,SACKP,IAEL,sBAAKxB,UAAWC,IAAE4B,SAAlB,UACI,8BACKD,IAEL,8BACI,8BACI,cAAC,EAAD,CAAgBd,SAnBT,SAACkB,GACxBjC,EAAMkC,YAAYD,EAASE,6BAIpB,cAAC,IAAD,CAAU/B,GAAI,Y,OCfvBgC,EAA6B,SAACb,GAChC,MAAO,CACHQ,OAAQR,EAAMc,KAAKN,S,QCkBZO,sBACXC,aAjBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBO,OAAQR,EAAMc,KAAKN,WAIF,SAACS,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDRR,SAACO,GAO7B,OAAOH,YAAQH,EAARG,EANmB,SAACvC,GACvB,OAAKA,EAAM+B,OAGJ,cAACW,EAAD,eAAe1C,IAFX,cAAC,IAAD,CAAUI,GAAI,gBCWlBkC,CAGbhB","file":"static/js/4.57b344d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2hqMv\",\"active\":\"DialogItem_active__1-ZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from 'react';\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog} key={props.id}>\n            <NavLink to={`/dialogs/${props.id}`} >\n                <img src={`https://i.pravatar.cc/80?img=${props.id}`} alt={'ava'}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;\n\n","import React from 'react';\nimport s from './Message.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message} key={props.id}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message;\n\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\nimport {reduxForm} from \"redux-form\";\nimport React from \"react\";\n\nconst maxLength = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'newMessageBody'} component={Textarea} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)\n","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialodItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\"\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage\n    let dialogElements = state.dialogs.map((el) => <DialogItem id={el.id} name={el.name}/>)\n    let messageElements = state.messages.map((el) => <Message id={el.id} message={el.message}/>)\n\n    const onSendMessageClick = (formData) => {\n        props.sendMessage(formData.newMessageBody)\n    }\n\n    if (!props.isAuth) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs_items}>\n                {dialogElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    {messageElements}\n                </div>\n                <div>\n                    <div>\n                        <AddMessageForm onSubmit={onSendMessageClick}/>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\n\n\n\nexport default Dialogs;\n\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    const RedirectComponent = (props) => {\n        if (!props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...props}/>\n    }\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {sendMessageCreator, } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs);\n\n"],"sourceRoot":""}