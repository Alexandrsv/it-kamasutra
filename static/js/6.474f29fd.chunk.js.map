{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["wsChannel","WebSocket","Chat","Messages","AddMessageForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessage","JSON","parse","data","console","log","pervMess","style","height","overflowY","map","m","i","Message","message","setNewMessage","onChange","currentTarget","value","onClick","send","src","photo","width","alt","to","userId","userName","ChatPage"],"mappings":"wLAMMA,EAAY,IAAIC,UAAU,gEAiB1BC,EAAW,WAEb,OACI,gCACI,cAACC,EAAD,IACA,cAACC,EAAD,QAKND,EAAe,WAAO,IAAD,EAESE,mBAA4B,IAFrC,mBAEhBC,EAFgB,KAENC,EAFM,KAWvB,OAPAC,qBAAU,WACNR,EAAUS,iBAAiB,WAAW,SAACC,GACnC,IAAMC,EAAaC,KAAKC,MAAMH,EAAEI,MAChCC,QAAQC,IAAIL,GACZJ,GAAY,SAACU,GAAD,4BAAkBA,GAAlB,YAA+BN,YAEhD,IAEC,qBAAKO,MAAO,CAACC,OAAQ,QAASC,UAAW,QAAzC,SACKd,EAASe,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAACC,EAAD,CAAiBC,QAASH,GAAZC,SAM5CnB,EAAqB,WAAO,IAAD,EACIC,mBAAS,IADb,mBACtBM,EADsB,KACXe,EADW,KAY7B,OACI,gCACI,8BACI,cAAC,IAAD,CAAUC,SAZP,SAACjB,GACZgB,EAAchB,EAAEkB,cAAcC,QAWQA,MAAOlB,MAEzC,8BACI,cAAC,IAAD,CAAQmB,QAZF,WACTnB,IACDX,EAAU+B,KAAKpB,GACfe,EAAc,MASV,0EAMVF,EAA4C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChD,OACI,gCACI,qBAAKO,IAAKP,EAAQQ,MAAOf,MAAO,CAACgB,MAAO,QAASC,IAAI,QACrD,eAAC,IAAD,CAAMC,GAAE,mBAAcX,EAAQY,QAA9B,UAAyCZ,EAAQa,SAAjD,OACA,uBACCb,EAAQA,QACT,2BAKGc,UAzEM,WACjB,OACI,8BACI,cAACrC,EAAD","file":"static/js/6.474f29fd.chunk.js","sourcesContent":["import React, {ChangeEventHandler, FC, useEffect, useState} from 'react';\nimport {Button} from \"antd\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { Link } from 'react-router-dom';\n\n\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n\nexport type ChatMessageType = {\n    message: string\n    photo: string\n    userId: number\n    userName: string\n}\n\nconst ChatPage: FC = () => {\n    return (\n        <div>\n            <Chat/>\n        </div>\n    );\n};\n\nconst Chat: FC = () => {\n\n    return (\n        <div>\n            <Messages/>\n            <AddMessageForm/>\n        </div>\n    );\n}\n\nconst Messages: FC = () => {\n\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\n\n    useEffect(() => {\n        wsChannel.addEventListener('message', (e: MessageEvent) => {\n            const newMessage = JSON.parse(e.data);\n            console.log(newMessage)\n            setMessages((pervMess) => [...pervMess, ...newMessage])\n        })\n    }, [])\n    return (\n        <div style={{height: '500px', overflowY: 'auto'}}>\n            {messages.map((m, i) => <Message key={i} message={m}/>)}\n\n        </div>\n    );\n};\n\nconst AddMessageForm: FC = () => {\n    const [newMessage,setNewMessage]=useState('')\n\n    const onChange=(e:any)=>{\n        setNewMessage(e.currentTarget.value)\n    }\n    const sendMessage=()=>{\n        if(!!newMessage) {\n            wsChannel.send(newMessage)\n            setNewMessage('')\n        }\n    }\n    return (\n        <div>\n            <div>\n                <TextArea onChange={onChange} value={newMessage}/>\n            </div>\n            <div>\n                <Button onClick={sendMessage}>Отправить</Button>\n            </div>\n        </div>\n    );\n};\n\nconst Message: FC<{ message: ChatMessageType }> = ({message}) => {\n    return (\n        <div>\n            <img src={message.photo} style={{width: '40px'}} alt=\"ava\"/>\n            <Link to={`/profile/${message.userId}`}>{message.userName} </Link>\n            <br/>\n            {message.message}\n            <hr/>\n        </div>\n    );\n};\n\nexport default ChatPage\n"],"sourceRoot":""}